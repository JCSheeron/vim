" ~/.vim/sessions/glpReport.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 17 January 2019 at 10:25:46.
" Open this file in Vim and run :source % to restore your session.

set guioptions=aegimrLtT
silent! set guifont=
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'solarized' | colorscheme solarized | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/swDev/python/glp2ceHiPotReport
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 ~/swDev/python/glp2ceHiPotReport/glpCreateReport.py
badd +1 ~/swDev/python/ftArchPostProc/ftArchPostProc.py
badd +0 ../plcCalibration/plcCalibration.py
argglobal
silent! argdel *
$argadd ~/swDev/python/glp2ceHiPotReport/glpCreateReport.py
edit ~/swDev/python/glp2ceHiPotReport/glpCreateReport.py
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 121 + 95) / 190)
exe 'vert 2resize ' . ((&columns * 30 + 95) / 190)
exe 'vert 3resize ' . ((&columns * 37 + 95) / 190)
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 108 - ((20 * winheight(0) + 17) / 35)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
108
normal! 028|
wincmd w
argglobal
if bufexists('~/swDev/python/ftArchPostProc/ftArchPostProc.py') | buffer ~/swDev/python/ftArchPostProc/ftArchPostProc.py | else | edit ~/swDev/python/ftArchPostProc/ftArchPostProc.py | endif
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
317
silent! normal! zo
317
silent! normal! zo
317
silent! normal! zo
321
silent! normal! zo
321
silent! normal! zo
321
silent! normal! zo
329
silent! normal! zo
329
silent! normal! zo
329
silent! normal! zo
let s:l = 342 - ((22 * winheight(0) + 17) / 35)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
342
normal! 014|
wincmd w
argglobal
if bufexists('../plcCalibration/plcCalibration.py') | buffer ../plcCalibration/plcCalibration.py | else | edit ../plcCalibration/plcCalibration.py | endif
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=99
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 12 - ((6 * winheight(0) + 17) / 35)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
12
normal! 079|
wincmd w
exe 'vert 1resize ' . ((&columns * 121 + 95) / 190)
exe 'vert 2resize ' . ((&columns * 30 + 95) / 190)
exe 'vert 3resize ' . ((&columns * 37 + 95) / 190)
tabnext 1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOc
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
